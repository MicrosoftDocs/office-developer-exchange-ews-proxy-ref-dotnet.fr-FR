<Type Name="AcceptItemType" FullName="ExchangeWebServices.AcceptItemType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35389f1722169e96942d2ea9417a18864e577911" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20604693" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AcceptItemType : ExchangeWebServices.WellKnownResponseObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit AcceptItemType extends ExchangeWebServices.WellKnownResponseObjectType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.AcceptItemType" />
  <TypeSignature Language="VB.NET" Value="Public Class AcceptItemType&#xA;Inherits WellKnownResponseObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class AcceptItemType : ExchangeWebServices::WellKnownResponseObjectType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.WellKnownResponseObjectType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Le <see cref="T:ExchangeWebServices.AcceptItemType" /> classe représente un objet de réponse accept qui est utilisé pour répondre à une réunion élément de calendrier ou de la demande.</summary>
    <remarks>
      <para>Le <see cref="T:ExchangeWebServices.AcceptItemType" /> objet est utilisé pour accepter une demande de réunion ou l’élément de calendrier. Bien que le <see cref="T:ExchangeWebServices.AcceptItemType" /> hérite de nombreux membres de nombreuses classes de base, la seule propriété qui doit être défini sur le <see cref="T:ExchangeWebServices.AcceptItemType" /> objet est la <see cref="P:ExchangeWebServices.ResponseObjectCoreType.ReferenceItemId" /> propriété.</para>
      <para>
        <b>Remarque</b>: un utilisateur ne peut pas accepter une demande de réunion ou élément pour lequel l’utilisateur est l’organisateur de calendrier.</para> Demandes de réunion 
      <para>ont un ItemClass de IPM. Schedule.Meeting.Request. pour trouver uniquement les demandes de réunion lorsque vous utilisez des dossiers de recherche ou les requêtes FindItem limiter les résultats par la propriété ItemClass.</para><para>Si le <see cref="P:ExchangeWebServices.CreateItemType.MessageDisposition" /> propriété n’est pas définie sur le <see cref="T:ExchangeWebServices.CreateItemType" />, un <see cref="F:ExchangeWebServices.ResponseCodeType.ErrorMessageDispositionRequired" /> erreur est renvoyée.</para><para /></remarks>
    <example>
      <para>L’exemple suivant montre comment accepter une demande de réunion. L’identificateur d’élément de la demande de réunion est utilisé dans les <see cref="P:ExchangeWebServices.ResponseObjectCoreType.ReferenceItemId" /> propriété.</para>
      <code>static void AcceptItem(ExchangeServiceBinding esb)
{
    // Create the request.
    CreateItemType request = new CreateItemType();
    
    // Set the message disposition on the request.
    request.MessageDisposition = MessageDispositionType.SendAndSaveCopy;
    request.MessageDispositionSpecified = true;

    // Create the AcceptItem response object.
    AcceptItemType acceptItem = new AcceptItemType();
    
    // Identify the meeting request to accept.
    acceptItem.ReferenceItemId = new ItemIdType();
    acceptItem.ReferenceItemId.Id = "AAAnAHJheA=";

    // Add the AcceptItem response object to the request.
    request.Items = new NonEmptyArrayOfAllItemsType();
    request.Items.Items = new ItemType[1];
    request.Items.Items[0] = acceptItem;

    // Send the request and get the response.
    CreateItemResponseType response = esb.CreateItem(request);

    ArrayOfResponseMessagesType aormt = response.ResponseMessages;
    ResponseMessageType[] rmta = aormt.Items;

    foreach (ResponseMessageType rmt in rmta)
    {
        ItemInfoResponseMessageType iirmt = (rmt as ItemInfoResponseMessageType);
        if (iirmt.ResponseClass == ResponseClassType.Success)
        {
            Console.WriteLine("Successfully accepted meeting");
        }
    }
}</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AcceptItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.AcceptItemType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AcceptItemType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Le <see cref="T:ExchangeWebServices.AcceptItemType" /> constructeur initialise une nouvelle instance de le <see cref="T:ExchangeWebServices.AcceptItemType" /> classe.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>