<Type Name="ConvertIdType" FullName="ExchangeWebServices.ConvertIdType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="74d566ed65d2325e903c9a326a3decb9e47b6cac" />
    <Meta Name="ms.sourcegitcommit" Value="09f9993d313d1e3ec77e21f70573b3fced6eea2e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20604247" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConvertIdType : ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ConvertIdType extends ExchangeWebServices.BaseRequestType" />
  <TypeSignature Language="DocId" Value="T:ExchangeWebServices.ConvertIdType" />
  <TypeSignature Language="VB.NET" Value="Public Class ConvertIdType&#xA;Inherits BaseRequestType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConvertIdType : ExchangeWebServices::BaseRequestType" />
  <AssemblyInfo>
    <AssemblyName>EWS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>ExchangeWebServices.BaseRequestType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CodeDom.Compiler.GeneratedCode("wsdl", "2.0.50727.3038")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(Namespace="http://schemas.microsoft.com/exchange/services/2006/messages")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Le <see cref="T:ExchangeWebServices.ConvertIdType" /> classe représente une demande de convertir les identificateurs d’éléments et dossiers entre les formats Exchange pris en charge.</summary>
    <remarks>To be added.</remarks>
    <example>
      <para>L’exemple suivant effectue une conversion d’identificateur entre l’identificateur des Services Web Exchange et le format d’identificateur Outlook Web Access.</para>
      <code>static void ConvertId()
{
    // Set the version, credentials, and the Client Access server on ExchangeServiceBinding.
    ExchangeServiceBinding esb = new ExchangeServiceBinding();
    esb.RequestServerVersionValue = new RequestServerVersion();
    esb.RequestServerVersionValue.Version = ExchangeVersionType.Exchange2007_SP1;
    esb.Credentials = new NetworkCredential("username", "password", "domain");
    esb.Url = "https://FQDN/ews/exchange.asmx";

    // Create the request.
    ConvertIdType request = new ConvertIdType();
    request.SourceIds = new AlternateIdType[1];
    request.SourceIds[0] = new AlternateIdType();

    // Convert from the Exchange Web Services identifier to an Outlook Web Access identifier.
    request.SourceIds[0].Format = IdFormatType.EwsId;
    (request.SourceIds[0] as AlternateIdType).Id = "AAMkADk";
    (request.SourceIds[0] as AlternateIdType).Mailbox = "user@example.com";
    request.DestinationFormat = IdFormatType.OwaId;

    try
    {
        // Send the ConvertIdType request and get the response.
        ConvertIdResponseType response = esb.ConvertId(request);
        ArrayOfResponseMessagesType aormt = response.ResponseMessages;
        ResponseMessageType[] rmta = aormt.Items;

        // Check each response message.
        foreach (ConvertIdResponseMessageType resp in rmta)
        {
            if (resp.ResponseClass == ResponseClassType.Success)
            {
                ConvertIdResponseMessageType cirmt = (resp as ConvertIdResponseMessageType);
                AlternateIdType myId = (cirmt.AlternateId as AlternateIdType);

                string format = myId.Format.ToString();
                string identifier = myId.Id;
                string mailbox = myId.Mailbox;

                Console.WriteLine("Converted to format: {0}\r\nIdentifier: {1}\r\nMailbox: {2}", format, identifier, mailbox);
            }
            else if (resp.ResponseClass == ResponseClassType.Error)
            {
                Console.WriteLine("Error: " + resp.MessageText);
            }
            else
                Console.WriteLine("Warning: " + resp.MessageText);
        }
        Console.ReadLine();
    }
    catch (Exception e)
    {
        Console.WriteLine(e.Message);
        Console.ReadLine();
    }
}</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConvertIdType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:ExchangeWebServices.ConvertIdType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConvertIdType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Le <see cref="T:ExchangeWebServices.ConvertIdType" /> constructeur initialise une nouvelle instance de le <see cref="T:ExchangeWebServices.ConvertIdType" /> classe.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DestinationFormat">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.IdFormatType DestinationFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ExchangeWebServices.IdFormatType DestinationFormat" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.ConvertIdType.DestinationFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationFormat As IdFormatType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ExchangeWebServices::IdFormatType DestinationFormat { ExchangeWebServices::IdFormatType get(); void set(ExchangeWebServices::IdFormatType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.IdFormatType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Le <see cref="P:ExchangeWebServices.ConvertIdType.DestinationFormat" /> propriété obtient ou définit le format d’identificateur qui est renvoyé pour tous les identificateurs convertis.</summary>
        <value>La propriété <b>DestinationFormat</b> renvoie une <see cref="T:ExchangeWebServices.IdFormatType" /> object qui représente le format d’identificateur qui est renvoyé pour tous les identificateurs convertis.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceIds">
      <MemberSignature Language="C#" Value="public ExchangeWebServices.AlternateIdBaseType[] SourceIds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ExchangeWebServices.AlternateIdBaseType[] SourceIds" />
      <MemberSignature Language="DocId" Value="P:ExchangeWebServices.ConvertIdType.SourceIds" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceIds As AlternateIdBaseType()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;ExchangeWebServices::AlternateIdBaseType ^&gt; ^ SourceIds { cli::array &lt;ExchangeWebServices::AlternateIdBaseType ^&gt; ^ get(); void set(cli::array &lt;ExchangeWebServices::AlternateIdBaseType ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EWS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("AlternateId", typeof(ExchangeWebServices.AlternateIdType), IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("AlternatePublicFolderId", typeof(ExchangeWebServices.AlternatePublicFolderIdType), IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlArrayItem("AlternatePublicFolderItemId", typeof(ExchangeWebServices.AlternatePublicFolderItemIdType), IsNullable=false, Namespace="http://schemas.microsoft.com/exchange/services/2006/types")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ExchangeWebServices.AlternateIdBaseType[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Le <see cref="P:ExchangeWebServices.ConvertIdType.SourceIds" /> propriété obtient ou définit un tableau de <b>AlternativeIdBaseType</b> qui contient les identificateurs source à convertir.</summary>
        <value>La propriété <b>SourceIds</b> renvoie un tableau <b>AlternativeIdBaseType</b> qui représentent les identificateurs source à convertir.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>